name: Build and Push Docker Images

on:
  push:
    branches: [main, staging]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/docker-build-push.yml'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches: [staging]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/docker-build-push.yml'
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force a build even without changes'
        required: false
        default: 'false'

# Only one build per ref at a time, queue others
concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: false

env:
  REGISTRY: ghcr.io

jobs:
  # Build API (Rust)
  build-api:
    runs-on: blacksmith-16vcpu-ubuntu-2404
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Docker Builder
        uses: useblacksmith/setup-docker-builder@v1
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata and determine tags
        id: meta
        run: |
          SHA_SHORT=$(git rev-parse --short=7 HEAD)
          echo "sha_short=${SHA_SHORT}" >> $GITHUB_OUTPUT
          
          # Read version from Cargo.toml if on main
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            VERSION=$(grep '^version' apps/api/Cargo.toml | head -n 1 | sed 's/version = "\(.*\)"/\1/' || echo "")
            if [ -n "$VERSION" ]; then
              echo "version=${VERSION}" >> $GITHUB_OUTPUT
            fi
          fi
          
          # Determine tags based on context
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "tags=${{ env.REGISTRY }}/buster-so/buster-api:preview-${SHA_SHORT}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            TAGS="${{ env.REGISTRY }}/buster-so/buster-api:${SHA_SHORT},${{ env.REGISTRY }}/buster-so/buster-api:latest"
            if [ -n "$VERSION" ]; then
              TAGS="${TAGS},${{ env.REGISTRY }}/buster-so/buster-api:${VERSION}"
            fi
            echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "tags=${{ env.REGISTRY }}/buster-so/buster-api:staging-${SHA_SHORT},${{ env.REGISTRY }}/buster-so/buster-api:staging" >> $GITHUB_OUTPUT
          fi
          
          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      
      - name: Build and push API Docker image
        uses: useblacksmith/build-push-action@v2
        with:
          context: ./apps/api
          file: ./apps/api/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.timestamp }}
          build-args: |
            COMMIT_SHA=${{ steps.meta.outputs.sha_short }}
            BUILD_DATE=${{ steps.meta.outputs.timestamp }}
          platforms: linux/amd64
      
      - name: Output image details
        run: |
          echo "âœ… API Docker image built and pushed!"
          echo "ðŸ“¦ Image tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | sed 's/^/   - /'

  # Build Server (TypeScript/Bun)
  build-server:
    runs-on: blacksmith-8vcpu-ubuntu-2404
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Mount Docker buildkit sticky disk
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-buildkit-cache-server-${{ github.ref_name }}
          path: /tmp/.buildkit-cache-server
      
      - name: Set up Docker Builder
        uses: useblacksmith/setup-docker-builder@v1
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata and determine tags
        id: meta
        run: |
          SHA_SHORT=$(git rev-parse --short=7 HEAD)
          echo "sha_short=${SHA_SHORT}" >> $GITHUB_OUTPUT
          
          # Read version from package.json if on main
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            VERSION=$(jq -r '.version // empty' apps/server/package.json || echo "")
            if [ -n "$VERSION" ]; then
              echo "version=${VERSION}" >> $GITHUB_OUTPUT
            fi
          fi
          
          # Determine tags based on context
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "tags=${{ env.REGISTRY }}/buster-so/buster-server:preview-${SHA_SHORT}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "main" ]]; then
            TAGS="${{ env.REGISTRY }}/buster-so/buster-server:${SHA_SHORT},${{ env.REGISTRY }}/buster-so/buster-server:latest"
            if [ -n "$VERSION" ]; then
              TAGS="${TAGS},${{ env.REGISTRY }}/buster-so/buster-server:${VERSION}"
            fi
            echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "tags=${{ env.REGISTRY }}/buster-so/buster-server:staging-${SHA_SHORT},${{ env.REGISTRY }}/buster-so/buster-server:staging" >> $GITHUB_OUTPUT
          fi
          
          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      
      - name: Build and push Server Docker image
        uses: useblacksmith/build-push-action@v2
        with:
          context: .
          file: ./apps/server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.timestamp }}
          build-args: |
            COMMIT_SHA=${{ steps.meta.outputs.sha_short }}
            BUILD_DATE=${{ steps.meta.outputs.timestamp }}
          platforms: linux/amd64
      
      - name: Output image details
        run: |
          echo "âœ… Server Docker image built and pushed!"
          echo "ðŸ“¦ Image tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | sed 's/^/   - /'