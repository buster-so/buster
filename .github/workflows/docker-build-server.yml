

name: Build and Push Server Docker Image

on:
  push:
    branches: [main, staging]
    paths:
      - 'apps/server/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - '.github/workflows/docker-build-server.yml'

# Only one build per branch at a time, queue others
concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: false  # Don't cancel, queue instead for deployments

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: buster-so/buster-server

jobs:
  build-and-push:
    runs-on: blacksmith-8vcpu-ubuntu-2404
    timeout-minutes: 20
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mount Docker buildkit sticky disk
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-buildkit-cache-${{ github.ref_name }}
          path: /tmp/.buildkit-cache

      - name: Set up Docker Builder
        uses: useblacksmith/setup-docker-builder@v1

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata and determine tags
        id: meta
        run: |
          SHA_SHORT=$(git rev-parse --short=7 HEAD)
          echo "sha_short=${SHA_SHORT}" >> $GITHUB_OUTPUT

          if [[ "${{ github.ref_name }}" == "main" ]]; then
            # For main: use commit SHA and latest
            echo "tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${SHA_SHORT},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_OUTPUT
          else
            # For all other branches: use staging-SHA and staging
            echo "tags=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-${SHA_SHORT},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging" >> $GITHUB_OUTPUT
          fi

          # Set build timestamp
          echo "timestamp=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: useblacksmith/build-push-action@v2
        with:
          context: .
          file: ./apps/server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ steps.meta.outputs.timestamp }}
            org.opencontainers.image.ref.name=${{ github.ref_name }}
          build-args: |
            COMMIT_SHA=${{ steps.meta.outputs.sha_short }}
            BUILD_DATE=${{ steps.meta.outputs.timestamp }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=local,src=/tmp/.buildkit-cache
          cache-to: type=local,dest=/tmp/.buildkit-cache,mode=max

      - name: Output image details
        run: |
          echo "âœ… Docker image built and pushed successfully!"
          echo "ðŸ“¦ Image tags:"
          echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n' | sed 's/^/   - /'
          echo ""
          echo "ðŸ”§ To use in Porter:"
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "   Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_short }}"
          else
            echo "   Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:staging-${{ steps.meta.outputs.sha_short }}"
          fi
